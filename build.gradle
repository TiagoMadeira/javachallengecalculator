import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

configurations {
	all*.exclude module : 'spring-boot-starter-logging'
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation project('rest')
	implementation project('calculator-service')


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.springframework.boot:spring-boot-starter-log4j2"

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation "org.springframework.kafka:spring-kafka-test"
}

dependencyManagement {
	imports {
		mavenBom SpringBootPlugin.BOM_COORDINATES
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

subprojects {
	group = rootProject.group
	version = rootProject.version

	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
	}

	dependencyManagement {
		imports {
			mavenBom SpringBootPlugin.BOM_COORDINATES
		}
	}

	configurations {
		all*.exclude module : 'spring-boot-starter-logging'
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies{
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation 'org.springframework.kafka:spring-kafka'
		implementation "org.springframework.boot:spring-boot-starter-log4j2"
		implementation 'org.springframework.boot:spring-boot-starter-web'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation "org.springframework.kafka:spring-kafka-test"
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	test {
		useJUnitPlatform()
	}
}
